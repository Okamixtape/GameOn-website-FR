---
// Formulaire d'inscription avec validation - Design Figma
---

<div id="modal-overlay" class="fixed inset-0 bg-black/50 z-50 hidden items-center justify-center p-4">
  <form 
    id="registration-form" 
    class="relative bg-dark rounded-card shadow-card p-12 w-full max-w-[536px] max-h-[90vh] overflow-y-auto"
    novalidate
  >
    <!-- Close Button -->
    <button
      type="button"
      id="close-modal"
      class="absolute top-6 right-6 text-white hover:text-gray-300 focus:outline-none focus:ring-2 focus:ring-white rounded"
      aria-label="Fermer le formulaire"
    >
      <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M1 1L16 16M16 1L1 16" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
      </svg>
    </button>

    <div class="space-y-6">
      <!-- Prénom -->
      <div>
        <label for="first-name" class="block text-label text-white mb-3">
          Prénom
        </label>
        <input
          type="text"
          id="first-name"
          name="firstName"
          required
          minlength="2"
          maxlength="50"
          class="w-full px-4 py-3 border border-border rounded-card focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
          aria-required="true"
          aria-describedby="first-name-error"
        />
        <p id="first-name-error" class="mt-1 text-small text-error hidden" role="alert"></p>
      </div>

      <!-- Nom -->
      <div>
        <label for="last-name" class="block text-label text-white mb-3">
          Nom
        </label>
        <input
          type="text"
          id="last-name"
          name="lastName"
          required
          minlength="2"
          maxlength="50"
          class="w-full px-4 py-3 border border-border rounded-card focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
          aria-required="true"
          aria-describedby="last-name-error"
        />
        <p id="last-name-error" class="mt-1 text-small text-error hidden" role="alert"></p>
      </div>

      <!-- Email -->
      <div>
        <label for="email" class="block text-label text-white mb-3">
          E-mail
        </label>
        <input
          type="email"
          id="email"
          name="email"
          required
          class="w-full px-4 py-3 border border-border rounded-card focus:outline-none focus:ring-2 focus:ring-primary focus:border-error"
          aria-required="true"
          aria-describedby="email-error"
        />
        <p id="email-error" class="mt-1 text-small text-error hidden" role="alert"></p>
      </div>

      <!-- Date de naissance -->
      <div>
        <label for="birthdate" class="block text-label text-white mb-3">
          Date de naissance
        </label>
        <input
          type="date"
          id="birthdate"
          name="birthdate"
          required
          class="w-full px-4 py-3 border border-border rounded-card focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
          aria-required="true"
          aria-describedby="birthdate-error"
        />
        <p id="birthdate-error" class="mt-1 text-small text-error hidden" role="alert"></p>
      </div>

      <!-- Nombre de tournois -->
      <div>
        <label for="tournaments" class="block text-label text-white mb-3">
          À combien de tournois GameOn avez-vous déjà participé ?
        </label>
        <input
          type="number"
          id="tournaments"
          name="tournaments"
          required
          min="0"
          max="99"
          placeholder="19"
          class="w-full px-4 py-3 border border-border rounded-card focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent"
          aria-required="true"
          aria-describedby="tournaments-error"
        />
        <p id="tournaments-error" class="mt-1 text-small text-error hidden" role="alert"></p>
      </div>

      <!-- Ville (Radio buttons) -->
      <div>
        <p class="block text-label text-white mb-3">
          A quel tournoi souhaitez-vous participer cette année ?
        </p>
        <div class="space-y-2">
          <div class="flex flex-wrap gap-2">
            <label class="inline-flex items-center gap-2 px-3 py-1 border border-border rounded-pill cursor-pointer hover:border-success transition-colors">
              <input type="radio" name="city" value="New York" required class="sr-only peer" />
              <span class="w-3 h-3 rounded-full border-2 border-current peer-checked:bg-success peer-checked:border-success"></span>
              <span class="text-small text-white font-secondary">New York</span>
            </label>
            <label class="inline-flex items-center gap-2 px-3 py-1 border border-border rounded-pill cursor-pointer hover:border-success transition-colors">
              <input type="radio" name="city" value="San Francisco" class="sr-only peer" />
              <span class="w-3 h-3 rounded-full border-2 border-current peer-checked:bg-success peer-checked:border-success"></span>
              <span class="text-small text-white font-secondary">San Francisco</span>
            </label>
            <label class="inline-flex items-center gap-2 px-3 py-1 border border-border rounded-pill cursor-pointer hover:border-success transition-colors">
              <input type="radio" name="city" value="Seattle" class="sr-only peer" />
              <span class="w-3 h-3 rounded-full border-2 border-current peer-checked:bg-success peer-checked:border-success"></span>
              <span class="text-small text-white font-secondary">Seattle</span>
            </label>
            <label class="inline-flex items-center gap-2 px-3 py-1 border border-border rounded-pill cursor-pointer hover:border-success transition-colors">
              <input type="radio" name="city" value="Chicago" class="sr-only peer" />
              <span class="w-3 h-3 rounded-full border-2 border-current peer-checked:bg-success peer-checked:border-success"></span>
              <span class="text-small text-white font-secondary">Chicago</span>
            </label>
          </div>
          <div class="flex flex-wrap gap-2">
            <label class="inline-flex items-center gap-2 px-3 py-1 border border-border rounded-pill cursor-pointer hover:border-success transition-colors">
              <input type="radio" name="city" value="Boston" class="sr-only peer" />
              <span class="w-3 h-3 rounded-full border-2 border-current peer-checked:bg-success peer-checked:border-success"></span>
              <span class="text-small text-white font-secondary">Boston</span>
            </label>
            <label class="inline-flex items-center gap-2 px-3 py-1 border border-border rounded-pill cursor-pointer hover:border-success transition-colors">
              <input type="radio" name="city" value="Portland" class="sr-only peer" />
              <span class="w-3 h-3 rounded-full border-2 border-current peer-checked:bg-success peer-checked:border-success"></span>
              <span class="text-small text-white font-secondary">Portland</span>
            </label>
          </div>
        </div>
        <p id="city-error" class="mt-1 text-small text-error hidden" role="alert"></p>
      </div>

      <!-- Conditions d'utilisation -->
      <div class="flex items-start gap-3">
        <input
          type="checkbox"
          id="terms"
          name="terms"
          required
          class="mt-1 w-5 h-5 rounded-[6px] border-2 border-border checked:bg-success checked:border-success focus:ring-2 focus:ring-primary cursor-pointer"
          aria-required="true"
          aria-describedby="terms-error"
        />
        <label for="terms" class="text-small text-white font-secondary cursor-pointer">
          J'ai lu et accepté les conditions d'utilisation.
        </label>
      </div>
      <p id="terms-error" class="mt-1 text-small text-error hidden" role="alert"></p>

      <!-- Newsletter -->
      <div class="flex items-start gap-3">
        <input
          type="checkbox"
          id="newsletter"
          name="newsletter"
          class="mt-1 w-5 h-5 rounded-[6px] border-2 border-border checked:bg-border checked:border-border focus:ring-2 focus:ring-primary cursor-pointer"
        />
        <label for="newsletter" class="text-small text-white font-secondary cursor-pointer">
          Je souhaite être prévenu des prochains évènements.
        </label>
      </div>
    </div>

    <!-- Bouton de soumission -->
    <div class="mt-8 flex justify-center">
      <button
        type="submit"
        class="bg-primary hover:bg-primary-dark text-white text-button-sm font-medium px-12 py-3 rounded-card transition-colors focus:outline-none focus:ring-4 focus:ring-primary focus:ring-offset-2 focus:ring-offset-dark disabled:opacity-50 disabled:cursor-not-allowed"
      >
        C'est parti
      </button>
    </div>

    <!-- Message de succès/erreur -->
    <div id="form-message" class="mt-4 hidden" role="status" aria-live="polite"></div>
  </form>
</div>

<script>
  // Gestion de l'ouverture/fermeture du modal
  const modalOverlay = document.getElementById('modal-overlay');
  const closeModalBtn = document.getElementById('close-modal');
  const openModalBtns = document.querySelectorAll('a[href="#inscription"]');

  openModalBtns.forEach(btn => {
    btn.addEventListener('click', (e) => {
      e.preventDefault();
      if (modalOverlay) {
        modalOverlay.classList.remove('hidden');
        modalOverlay.style.display = 'flex';
        document.body.style.overflow = 'hidden';
      }
    });
  });

  closeModalBtn?.addEventListener('click', () => {
    if (modalOverlay) {
      modalOverlay.classList.add('hidden');
      modalOverlay.style.display = 'none';
      document.body.style.overflow = '';
    }
  });

  modalOverlay?.addEventListener('click', (e) => {
    if (e.target === modalOverlay) {
      modalOverlay.classList.add('hidden');
      modalOverlay.style.display = 'none';
      document.body.style.overflow = '';
    }
  });

  // Validation du formulaire
  const form = document.getElementById('registration-form') as HTMLFormElement;
  const formMessage = document.getElementById('form-message') as HTMLDivElement;

  const errorMessages: Record<string, Record<string, string>> = {
    'first-name': {
      valueMissing: 'Le prénom est obligatoire',
      tooShort: 'Le prénom doit contenir au moins 2 caractères',
      tooLong: 'Le prénom ne peut pas dépasser 50 caractères'
    },
    'last-name': {
      valueMissing: 'Le nom est obligatoire',
      tooShort: 'Le nom doit contenir au moins 2 caractères',
      tooLong: 'Le nom ne peut pas dépasser 50 caractères'
    },
    'email': {
      valueMissing: 'L\'email est obligatoire',
      typeMismatch: 'Veuillez entrer une adresse email valide'
    },
    'birthdate': {
      valueMissing: 'La date de naissance est obligatoire',
      customError: 'Vous devez avoir au moins 18 ans'
    },
    'tournaments': {
      valueMissing: 'Le nombre de tournois est obligatoire',
      rangeUnderflow: 'Le nombre doit être supérieur ou égal à 0',
      rangeOverflow: 'Le nombre ne peut pas dépasser 99'
    },
    'terms': {
      valueMissing: 'Vous devez accepter les conditions d\'utilisation'
    }
  };

  function validateField(field: HTMLInputElement): boolean {
    const errorElement = document.getElementById(`${field.id}-error`) as HTMLParagraphElement;
    
    if (field.id === 'birthdate' && field.value) {
      const birthDate = new Date(field.value);
      const today = new Date();
      const age = today.getFullYear() - birthDate.getFullYear();
      const monthDiff = today.getMonth() - birthDate.getMonth();
      
      if (age < 18 || (age === 18 && monthDiff < 0)) {
        field.setCustomValidity('Vous devez avoir au moins 18 ans');
      } else {
        field.setCustomValidity('');
      }
    }

    if (!field.validity.valid) {
      const errorType = Object.keys(field.validity).find(
        key => field.validity[key as keyof ValidityState] === true && key !== 'valid'
      ) as keyof ValidityState;

      const message = errorMessages[field.id]?.[errorType] || 'Ce champ est invalide';
      
      errorElement.textContent = message;
      errorElement.classList.remove('hidden');
      field.classList.add('border-error');
      field.setAttribute('aria-invalid', 'true');
      
      return false;
    } else {
      errorElement.textContent = '';
      errorElement.classList.add('hidden');
      field.classList.remove('border-error');
      field.setAttribute('aria-invalid', 'false');
      
      return true;
    }
  }

  const fields = form.querySelectorAll('input[required]') as NodeListOf<HTMLInputElement>;
  fields.forEach(field => {
    field.addEventListener('blur', () => validateField(field));
    field.addEventListener('input', () => {
      if (field.classList.contains('border-error')) {
        validateField(field);
      }
    });
  });

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    let isValid = true;
    fields.forEach(field => {
      if (!validateField(field)) {
        isValid = false;
      }
    });

    if (!isValid) {
      formMessage.textContent = 'Veuillez corriger les erreurs dans le formulaire';
      formMessage.className = 'mt-4 p-4 bg-error/20 text-error rounded-card text-small';
      formMessage.classList.remove('hidden');
      return;
    }

    const submitButton = form.querySelector('button[type="submit"]') as HTMLButtonElement;
    submitButton.disabled = true;
    submitButton.textContent = 'Envoi en cours...';

    try {
      await new Promise(resolve => setTimeout(resolve, 1000));

      formMessage.textContent = 'Merci pour votre inscription';
      formMessage.className = 'mt-4 p-4 bg-success/20 text-success rounded-card text-center text-[24px] font-medium';
      formMessage.classList.remove('hidden');
      
      form.reset();
    } catch (error) {
      formMessage.textContent = '✗ Une erreur est survenue. Veuillez réessayer.';
      formMessage.className = 'mt-4 p-4 bg-error/20 text-error rounded-card text-small';
      formMessage.classList.remove('hidden');
    } finally {
      submitButton.disabled = false;
      submitButton.textContent = 'C\'est parti';
    }
  });
</script>
